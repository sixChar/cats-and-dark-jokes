{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["JokeTwoPart","props","joke","setup","delivery","JokeSingle","JokeLoading","RandomJoke","useState","setJoke","useEffect","fetch","then","response","json","data","type","RandomCat","imgSize","Math","floor","random","console","log","imgUrl","width","height","src","style","borderRadius","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,I,YCIf,SAASA,EAAYC,GACnB,IAAMC,EAAOD,EAAMC,KACnB,OACE,gCACE,4BAAIA,EAAKC,QACT,4BAAID,EAAKE,cAKf,SAASC,EAAWJ,GAClB,IAAMC,EAAOD,EAAMC,KACnB,OACE,8BACGA,EAAKA,OAKZ,SAASI,EAAYL,GACnB,OACE,6CAOJ,SAASM,IAAc,IAAD,EAEGC,mBAAS,GAFZ,mBAEbN,EAFa,KAERO,EAFQ,KAUpB,OANAC,qBAAU,WACRC,MAAM,oCACWC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAQM,QACrC,IAECb,EACa,UAAXA,EAAKc,KACA,cAACX,EAAD,CAAYH,KAAMA,IAGlB,cAACF,EAAD,CAAaE,KAAMA,IAIrB,cAACI,EAAD,IAaX,SAASW,EAAUhB,GAGjB,IAAMiB,EAAU,IAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UACtCC,QAAQC,IAAIL,GAEZ,IAAMM,EAAM,iCAA6BN,EAA7B,YAAwCA,GAEpD,OACE,8BACE,qBACEO,MAAM,MACNC,OAAO,MACPC,IAAKH,EACLI,MAAO,CACLC,aAAa,YAoBRC,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAACd,EAAD,IACA,cAACV,EAAD,QClFSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fc83ac93.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction JokeTwoPart(props) {\n  const joke = props.joke;\n  return (\n    <div>\n      <p>{joke.setup}</p>\n      <p>{joke.delivery}</p>\n    </div>\n  );\n}\n\nfunction JokeSingle(props) {\n  const joke = props.joke;\n  return (\n    <div>\n      {joke.joke}\n    </div>\n  );\n}\n\nfunction JokeLoading(props) {\n  return (\n    <div>\n      Loading...\n    </div>\n  );\n}\n\n\nfunction RandomJoke() {\n\n  const [joke,setJoke] = useState(0);\n\n  useEffect(() => {\n    fetch(\"https://v2.jokeapi.dev/joke/Dark\")\n                    .then(response => response.json())\n                    .then(data => setJoke(data));\n  }, []);\n\n  if (joke) {\n    if (joke.type==\"single\") {\n      return <JokeSingle joke={joke}/>\n    }\n    else {\n      return <JokeTwoPart joke={joke}/>\n    }\n  }\n  else {\n    return <JokeLoading/>;\n  }\n\n  return (\n    <div>\n      {joke.joke}\n    </div>\n  );\n\n}\n\n\n\nfunction RandomCat(props) {\n  // Api returns different images based on image size so randomizing the size\n  // randomizes the image\n  const imgSize = 192 + Math.floor(Math.random() * 128);\n  console.log(imgSize);\n\n  const imgUrl = `http://placekitten.com/${imgSize}/${imgSize}`\n\n  return (\n    <div>\n      <img\n        width='256'\n        height='256'\n        src={imgUrl}\n        style={{\n          borderRadius:'40px'\n        }}\n      />\n    </div>\n  );\n\n}\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RandomCat/>\n      <RandomJoke/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}